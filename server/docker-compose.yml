version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - user-service
      - news-service
      - payment-service
    networks:
      - app-network

  user-service:
    build:
      context: ./UserService
    restart: always
    ports:
      - "8001:8001"
    env_file:
      - ./UserService/.env
    depends_on:
      - kafka
    networks:
      - app-network

  news-service:
    build:
      context: ./NewsService  
    restart: always
    ports:
      - "8002:8002"
    env_file:
      - ./NewsService/.env
    depends_on:
      - kafka
    networks:
      - app-network
  
  payment-service:
    build:
      context: ./PaymentService
    restart: always
    ports:
      - "8003:8003"
    env_file:
      - ./PaymentService/.env
    depends_on:
      - kafka
    networks:
      - app-network

  # Zookeeper service (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app-network
    volumes:
      - kafka_data:/var/lib/kafka/data

  # Optional: Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_logs:
  kafka_data: